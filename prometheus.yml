# my global config
global:
  scrape_interval:     15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

# Alertmanager configuration
alerting:
  alertmanagers:
  - static_configs:
    - targets:
      # - alertmanager:9093

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
rule_files:
  # - "first_rules.yml"
  # - "second_rules.yml"

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'prometheus'

    # metrics_path defaults to '/metrics'
    # scheme defaults to 'http'.

    static_configs:
      - targets: ['localhost:9090']
  - job_name: 'kube-api'
    static_configs:
      - targets:
          - k-master:9999
    relabel_configs:
      - source_labels: [__address__]
        regex: ".*(k-master):.*"
        replacement: "$1-kube-api-server"
        target_label: instance
  - job_name: 'kube-master'
    static_configs:
      - targets:
          - k-master:9100
    relabel_configs:
      - source_labels: [__address__]
        regex: ".*(k-master.*):.*"
        target_label: instance
  - job_name: 'kubelet'
    static_configs:
      - targets:
          - k-worker-1:9100
          - k-worker-2:9100
          - k-worker-3:9100
          - k-worker-4:9100
    relabel_configs:
      - source_labels: [__address__]
        regex: ".*(k-worker.*):.*"
        target_label: instance

